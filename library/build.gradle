apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'

def VERSION_NAME = project.VERSION_NAME
def VERSION_CODE = Integer.parseInt(project.VERSION_CODE)

def ANDROID_COMPILE_SDK_VERSION = Integer.parseInt(project.ANDROID_COMPILE_SDK_VERSION)
def ANDROID_TARGET_SDK_VERSION = Integer.parseInt(project.ANDROID_TARGET_SDK_VERSION)
def ANDROID_BUILD_TOOLS_VERSION = project.ANDROID_BUILD_TOOLS_VERSION
def ANDROID_MIN_SDK_VERSION = Integer.parseInt(project.ANDROID_MIN_SDK_VERSION)

def JAVA_COMPATIBILITY =  JavaVersion.valueOf(project.JAVA_COMPATIBILITY)

android {
    compileSdkVersion ANDROID_COMPILE_SDK_VERSION
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion ANDROID_MIN_SDK_VERSION
        targetSdkVersion ANDROID_TARGET_SDK_VERSION
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
//        debug {
//            buildConfig "public final static boolean HAS_PROTOTYPE_FEATURE = true;"
//        }
//        release {
//            buildConfig "public final static boolean HAS_PROTOTYPE_FEATURE = false;"
//        }
    }
    compileOptions {
        sourceCompatibility JAVA_COMPATIBILITY
        targetCompatibility JAVA_COMPATIBILITY
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'eu.agno3.jcifs:jcifs-ng:2.1.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}

task createPom {
    pom {
        project {
            groupId POM_GROUP_ID
            artifactId POM_ARTIFACT_ID
            version VERSION_NAME
            inceptionYear POM_INCEPTION_YEAR
            licenses {
                license {
                    name POM_LICENCE_NAME
                    url POM_LICENCE_URL
                    distribution POM_LICENCE_DIST
                }
            }
        }
    }.writeTo("pom.xml")
}

build.finalizedBy(createPom)
